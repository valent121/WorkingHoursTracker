// <auto-generated />
using System;
using EmployeeWorkTracker_Test.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WorkingHoursTracker.Migrations
{
    [DbContext(typeof(EmployeeWorkingHoursContext))]
    [Migration("20240428215601_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeWorkTracker_Test.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationTime = new DateTime(2024, 4, 28, 23, 56, 0, 784, DateTimeKind.Local).AddTicks(9206),
                            FirstName = "Tomislav",
                            LastName = "Marinković",
                            LastUpdate = new DateTime(2024, 4, 28, 23, 56, 0, 784, DateTimeKind.Local).AddTicks(9337)
                        },
                        new
                        {
                            Id = 2,
                            CreationTime = new DateTime(2024, 4, 25, 23, 56, 0, 784, DateTimeKind.Local).AddTicks(9341),
                            FirstName = "Marina",
                            LastName = "Perović",
                            LastUpdate = new DateTime(2024, 4, 28, 23, 56, 0, 784, DateTimeKind.Local).AddTicks(9345)
                        },
                        new
                        {
                            Id = 3,
                            CreationTime = new DateTime(2024, 4, 25, 0, 56, 0, 784, DateTimeKind.Local).AddTicks(9347),
                            FirstName = "Petra",
                            LastName = "Božinović",
                            LastUpdate = new DateTime(2024, 4, 25, 0, 56, 0, 784, DateTimeKind.Local).AddTicks(9349)
                        },
                        new
                        {
                            Id = 4,
                            CreationTime = new DateTime(2024, 4, 20, 20, 56, 0, 784, DateTimeKind.Local).AddTicks(9351),
                            FirstName = "Mario",
                            LastName = "Došen",
                            LastUpdate = new DateTime(2024, 4, 25, 5, 56, 0, 784, DateTimeKind.Local).AddTicks(9353)
                        },
                        new
                        {
                            Id = 5,
                            CreationTime = new DateTime(2024, 4, 21, 16, 56, 0, 784, DateTimeKind.Local).AddTicks(9355),
                            FirstName = "Ozren",
                            LastName = "Bogdan",
                            LastUpdate = new DateTime(2024, 4, 28, 23, 56, 0, 784, DateTimeKind.Local).AddTicks(9357)
                        });
                });

            modelBuilder.Entity("EmployeeWorkTracker_Test.Models.WorkingHours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("Duration")
                        .HasColumnType("bigint");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("WorkingHours");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = 20L,
                            EmployeeId = 1,
                            EndTime = new DateTime(2024, 4, 28, 23, 56, 0, 784, DateTimeKind.Local).AddTicks(9458),
                            StartTime = new DateTime(2024, 4, 28, 23, 36, 0, 784, DateTimeKind.Local).AddTicks(9454)
                        },
                        new
                        {
                            Id = 2,
                            Duration = 10L,
                            EmployeeId = 1,
                            EndTime = new DateTime(2024, 4, 28, 23, 26, 0, 784, DateTimeKind.Local).AddTicks(9464),
                            StartTime = new DateTime(2024, 4, 28, 23, 16, 0, 784, DateTimeKind.Local).AddTicks(9462)
                        });
                });

            modelBuilder.Entity("EmployeeWorkTracker_Test.Models.WorkingHours", b =>
                {
                    b.HasOne("EmployeeWorkTracker_Test.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
